package database

import (
	"log"
	"os"

	"github.com/dmitrijfomin/menu-fodifood/backend/internal/models"
	"gorm.io/driver/postgres"
	"gorm.io/gorm"
	"gorm.io/gorm/logger"
	"gorm.io/gorm/schema"
)

var DB *gorm.DB

// Connect –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ PostgreSQL –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
func Connect() error {
	dsn := os.Getenv("DATABASE_URL")
	if dsn == "" {
		log.Fatal("DATABASE_URL environment variable is not set")
	}

	var err error
	DB, err = gorm.Open(postgres.Open(dsn), &gorm.Config{
		Logger: logger.Default.LogMode(logger.Info),
		NamingStrategy: schema.NamingStrategy{
			TablePrefix:   "",
			SingularTable: false,
			NoLowerCase:   false, // ‚úÖ –ø—É—Å—Ç—å GORM —Å–∞–º —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–º–µ–Ω–∞
		},
	})

	if err != nil {
		return err
	}

	log.Println("‚úÖ Connected to PostgreSQL database")

	// –ê–≤—Ç–æ–º–∏–≥—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —Ç–∞–∫ –∫–∞–∫ —É –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å Prisma —Å—Ö–µ–º–∞)
	// err = DB.AutoMigrate(&models.User{})
	// if err != nil {
	// 	return err
	// }

	return nil
}

// GetDB –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
func GetDB() *gorm.DB {
	return DB
}

// AutoMigrate –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –º–∏–≥—Ä–∞—Ü–∏—é —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
func AutoMigrate() error {
	log.Println("üîÑ Starting database schema migration...")

	// –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
	err := DB.AutoMigrate(
		&models.User{},
		&models.Ingredient{},
		&models.SemiFinished{},
		&models.SemiFinishedIngredient{},
		&models.Product{},
		&models.ProductIngredient{},
		&models.ProductSemiFinished{},
		&models.Order{},
		&models.OrderItem{},
	)

	if err != nil {
		log.Printf("‚ùå Migration failed: %v", err)
		return err
	}

	log.Println("‚úÖ Database schema migration completed successfully")
	return nil
}
