package main

import (
	"log"
	"os"

	"github.com/joho/godotenv"
	"gorm.io/driver/postgres"
	"gorm.io/gorm"
)

func main() {
	// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
	if err := godotenv.Load("../../.env"); err != nil {
		log.Println("No .env file found, using system environment variables")
	}

	// –ü–æ–ª—É—á–∞–µ–º DATABASE_URL
	dsn := os.Getenv("DATABASE_URL")
	if dsn == "" {
		log.Fatal("DATABASE_URL is not set")
	}

	// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
	db, err := gorm.Open(postgres.Open(dsn), &gorm.Config{})
	if err != nil {
		log.Fatal("Failed to connect to database:", err)
	}

	log.Println("‚úÖ Connected to database")

	// –í—ã–ø–æ–ª–Ω—è–µ–º SQL –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤
	sqls := []string{
		`ALTER TABLE "OrderItem" RENAME COLUMN "orderId" TO "order_id"`,
		`ALTER TABLE "OrderItem" RENAME COLUMN "productId" TO "product_id"`,
	}

	for _, sql := range sqls {
		log.Printf("üìù Executing: %s", sql)
		if err := db.Exec(sql).Error; err != nil {
			// –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Å—Ç–æ–ª–±—Ü—ã —É–∂–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω—ã
			log.Printf("‚ö†Ô∏è Warning: %v (this is OK if columns are already renamed)", err)
		} else {
			log.Printf("‚úÖ Success!")
		}
	}

	log.Println("üéâ Migration completed!")
}
